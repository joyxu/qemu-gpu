FROM ubuntu:hirsute
LABEL description="Test QEMU"

ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies
RUN apt-get update \
    && apt-get install -yy --no-install-recommends \
        ca-certificates \
        gnupg \
    && echo "deb-src https://archive.ubuntu.com/ubuntu hirsute main" >> /etc/apt/sources.list \
    && cat /etc/apt/sources.list \
    && apt-get update \
    && apt-get upgrade -yy \
    && apt-get build-dep -yy \
        qemu virglrenderer

# Install required packages
RUN apt-get install -yy --no-install-recommends \
        wget \
        git \
        libsdl2-dev \
        libsdl2-image-dev \
        cpio

RUN apt-get install -yy --no-install-recommends \
        bc \
        libelf-dev \
        qemu-utils \
        libvulkan-dev \
        openssh-server \
        gdb

RUN apt-get install -yy --no-install-recommends \
        mesa-vulkan-drivers \
        vulkan-tools

RUN apt-get build-dep -yy mesa
RUN apt-get install -yy llvm
RUN apt-get install -yy mesa-utils x11-apps

ARG USER_ID
ARG GROUP_ID

RUN export uid=$USER_ID gid=$GROUP_ID \
    && mkdir -p /home/venus \
    && echo "venus:x:${uid}:${gid}:Developer,,,:/home/venus:/bin/bash" >> /etc/passwd \
    && echo "venus:x:${uid}:" >> /etc/group \
    && chown ${uid}:${gid} -R /home/venus

# Provide our own init script for kernel boot
WORKDIR /rootfs
COPY init.sh /rootfs/.
RUN find -H | cpio -H newc -o | xz --check=crc32 -T4 - > /rootfs.cpio.gz
RUN rm -r /rootfs
WORKDIR /

# Used for building our kernel
WORKDIR config
COPY x86_64.config /config
WORKDIR /

ENV DEST_DIR=/usr/local/bin

COPY build-kernel.sh "$DEST_DIR"
RUN chmod +x "$DEST_DIR"/build-kernel.sh

COPY build-mesa.sh "$DEST_DIR"
RUN chmod +x "$DEST_DIR"/build-mesa.sh

COPY build-virgl.sh "$DEST_DIR"
RUN chmod +x "$DEST_DIR"/build-virgl.sh

COPY build-qemu.sh "$DEST_DIR"
RUN chmod +x "$DEST_DIR"/build-qemu.sh

COPY create-image.sh "$DEST_DIR"
RUN chmod +x "$DEST_DIR"/create-image.sh

COPY run-qemu.sh "$DEST_DIR"
RUN chmod +x "$DEST_DIR"/run-qemu.sh

COPY run.sh "$DEST_DIR"
RUN chmod +x "$DEST_DIR"/run.sh
ENTRYPOINT ["/usr/local/bin/run.sh"]
